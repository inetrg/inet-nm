# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = inet-nm
description = cli application for managing nodes
author = Kevin Weiss
author_email = weiss.kevin604@gmail.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/inetrg/inet-nm
project_urls =
   Documentation = https://inet-nm.readthedocs.io/en/stable/
   Source = https://github.com/inetrg/inet-nm
   Changelog = https://github.com/inetrg/inet-nm/blob/master/CHANGELOG.md
   Tracker = https://github.com/inetrg/inet-nm/issues
   Download = https://pypi.org/project/inet-nm/#files

platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

python_requires = >=3.7
install_requires =
    importlib-metadata; python_version<"3.8"
    pyudev


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
testing =
    setuptools
    pytest
    pytest-cov

all =
    inquirer

[options.entry_points]
console_scripts =
    inet-nm-tmux = inet_nm.runner_cli:nm_tmux
    inet-nm-exec = inet_nm.runner_cli:nm_exec
    inet-nm-check = inet_nm.check:cli_count_board_inventory
    inet-nm-commission = inet_nm.commissioner:commission
    inet-nm-tty-from-uid = inet_nm.commissioner:cli_tty_from_uid
    inet-nm-update-commissioned = inet_nm.commissioner:update_commissioned
    inet-nm-free = inet_nm.locking:cli_release_all_locks
    inet-nm-update-from-os = inet_nm.update_os_board_list:cli_update_boards_from_os


[tool:pytest]
addopts =
    --cov inet_nm --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.4.1
package = inet_nm
extensions =
    github_actions
    markdown
    no_skeleton
    pre_commit
